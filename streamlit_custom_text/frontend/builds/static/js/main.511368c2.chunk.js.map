{"version":3,"sources":["CustomText.tsx","Main.tsx","index.tsx"],"names":["defaultProps","api","text_size","refresh_sec","refresh_cutoff_sec","CustomText","props","useState","rowData","setRowData","useEffect","Streamlit","setFrameHeight","console","log","fetchData","a","axios","get","then","response","data","setComponentValue","timeout","interval","setInterval","setTimeout","clearInterval","clearTimeout","style","fontSize","withStreamlitConnection","args","engine","Styletron","ReactDOM","render","StrictMode","value","theme","LightTheme","document","getElementById"],"mappings":"iQAeMA,EAAsB,CAC1BC,IAAK,GACLC,UAAW,GACXC,YAAa,EACbC,mBAAoB,GA8CPC,EA3Ce,WAAkC,IAAjCC,EAAgC,uDAAjBN,EACpCC,EAAiEK,EAAjEL,IADqD,EACYK,EAA5DJ,iBADgD,MACpC,GADoC,IACYI,EAA5CH,mBADgC,MAClB,EADkB,IACYG,EAA3BF,0BADe,MACM,EADN,IAE/BG,mBAAS,IAFsB,mBAEtDC,EAFsD,KAE7CC,EAF6C,KAgC7D,OA7BAC,qBAAU,kBAAMC,IAAUC,oBAE1BF,qBAAU,WACRG,QAAQC,IAAIR,GACZ,IAAMS,EAAS,uCAAG,sBAAAC,EAAA,sDAChBC,IAAMC,IAAIjB,GAAKkB,MAAK,SAACC,GACnBX,EAAWW,EAASC,MACpBV,IAAUW,kBAAkBF,EAASC,MACrCR,QAAQC,IAAI,gBAAiBb,EAAKmB,EAASC,SAJ7B,2CAAH,qDAQfN,IACA,IACIQ,EADEC,EAAWC,YAAYV,EAAyB,IAAdZ,GAUxC,OARIC,EAAqB,IACvBS,QAAQC,IAAIV,GACZmB,EAAUG,YAAW,WACnBC,cAAcH,GACdX,QAAQC,IAAI,qCAAsCX,KAC5B,IAArBC,IAGE,WACLuB,cAAcH,GACVD,GAASK,aAAaL,MAE3B,IAGD,yBACEM,MAAO,CACLC,SAAU5B,IAGXM,IClCQuB,eAlBF,SAACzB,GAA2B,IAAD,EACsBA,EAAM0B,KAA1D/B,EAD8B,EAC9BA,IAAKC,EADyB,EACzBA,UAAWC,EADc,EACdA,YAAaC,EADC,EACDA,mBAIrC,OAFAM,qBAAU,kBAAMC,IAAUC,oBAGxB,oCACE,6DACA,kBAAC,EAAD,CACEX,IAAKA,EACLC,UAAWA,EACXC,YAAaA,EACbC,mBAAoBA,Q,gCCZtB6B,EAAS,IAAIC,IAGnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAmBC,MAAOL,GACxB,kBAAC,IAAD,CAAeM,MAAOC,KACpB,kBAAC,EAAD,SAINC,SAASC,eAAe,W","file":"static/js/main.511368c2.chunk.js","sourcesContent":["import React, { useState, useEffect, FC } from 'react';\r\nimport axios from \"axios\"\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\n\r\ntype Props = {\r\n  api: string,\r\n  text_size?: number,\r\n  refresh_sec?: number,\r\n  refresh_cutoff_sec?: number,\r\n}\r\n\r\nconst defaultProps: Props = {\r\n  api: \"\",\r\n  text_size: 10,\r\n  refresh_sec: 1,\r\n  refresh_cutoff_sec: 0\r\n}\r\n\r\nconst CustomText: FC<Props> = (props: Props = defaultProps) => {\r\n  const { api, text_size = 10, refresh_sec = 1, refresh_cutoff_sec = 0 } = props;\r\n  const [rowData, setRowData] = useState([]);\r\n  useEffect(() => Streamlit.setFrameHeight());\r\n\r\n  useEffect(() => {\r\n    console.log(props);\r\n    const fetchData = async () => {\r\n      axios.get(api).then((response) => {\r\n        setRowData(response.data);\r\n        Streamlit.setComponentValue(response.data);\r\n        console.log(\"Fetching from\", api, response.data);\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, refresh_sec * 1000);\r\n    let timeout: NodeJS.Timeout;\r\n    if (refresh_cutoff_sec > 0) {\r\n      console.log(refresh_cutoff_sec);\r\n      timeout = setTimeout(() => {\r\n        clearInterval(interval);\r\n        console.log(\"Fetching data ended, refresh rate:\", refresh_sec);\r\n      }, refresh_cutoff_sec * 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      if (timeout) clearTimeout(timeout);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        fontSize: text_size\r\n      }}\r\n    >\r\n      {rowData}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomText;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport CustomText from \"./CustomText\";\r\n\r\nconst Main = (props: ComponentProps) => {\r\n  const { api, text_size, refresh_sec, refresh_cutoff_sec } = props.args;\r\n\r\n  useEffect(() => Streamlit.setFrameHeight());\r\n\r\n  return (\r\n    <>\r\n      <h3>Vorol's Custom Text Component</h3>\r\n      <CustomText\r\n        api={api}\r\n        text_size={text_size}\r\n        refresh_sec={refresh_sec}\r\n        refresh_cutoff_sec={refresh_cutoff_sec}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStreamlitConnection(Main);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Main from \"./Main\"\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\nimport { Client as Styletron } from \"styletron-engine-atomic\"\r\nimport { Provider as StyletronProvider } from \"styletron-react\"\r\nimport { ThemeProvider, LightTheme } from \"baseui\"\r\n\r\nconst engine = new Styletron()\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StyletronProvider value={engine}>\r\n      <ThemeProvider theme={LightTheme}>\r\n        <Main />\r\n      </ThemeProvider>\r\n    </StyletronProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}